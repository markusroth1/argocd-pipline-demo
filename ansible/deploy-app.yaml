---
- name: Logging in to Openshift
  hosts: localhost
  vars_files:
    - vars/vars.yml
    - next/user.yml
  
  tasks:
    - name: Ensure an access token is retrieved for the admin user
      community.okd.openshift_auth:
        host: '{{ ocp4_api_url }}'
        username: "{{ ocp4_kubeadmin }}"
        password: "{{ ocp4_kubeadmin_pw }}"
        validate_certs: false
      register: auth_results

- name: Deploy Application in OpenShift using Ansible K8s modules
  hosts: localhost
  gather_facts: false
  connection: local
  vars_files:
    - vars/vars.yml
    - vault/vault.yml
  
  module_defaults:
    group/community.okd.okd:
      namespace: openshift-config
      api_key: "{{ auth_results['openshift_auth']['api_key'] }}"
      host: '{{ ocp4_api_url }}'
    group/kubernetes.core.k8s:
      namespace: openshift-config
      api_key: "{{ auth_results['openshift_auth']['api_key'] }}"
      host: '{{ ocp4_api_url }}'

  tasks:

    - name: Create OpenShift project (namespace)
      kubernetes.core.k8s:
        validate_certs: false
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: my-app-project


    - name: Deploy backend application using Deployment
      kubernetes.core.k8s:
        validate_certs: false
        state: present
        definition:
          kind: Deployment
          apiVersion: apps/v1
          metadata:
            name: backend
            namespace: my-app-project
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: backend
            template:
              metadata:
                labels:
                  app: backend
                  deployment: backend
              spec:
                containers:
                  - name: backend
                    image: >-
                      quay.io/markus_roth/automation/backend:1.0
                    ports:
                      - containerPort: 5000

    - name: Expose the backend application with a service
      kubernetes.core.k8s:
        validate_certs: false
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: backend-service
            namespace: my-app-project
          spec:
            selector:
              app: backend
            ports:
              - protocol: TCP
                port: 5000
                targetPort: 5000

    - name: Create a service account for the frontend app
      kubernetes.core.k8s:
        validate_certs: false
        state: present
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: my-sa
            namespace: my-app-project

    - name: Add SCC to Service Account using 'oc' command
      command:
        cmd: "oc adm policy add-scc-to-user anyuid -z my-sa -n my-app-project"


    - name: Deploy frontend application using Deployment
      kubernetes.core.k8s:
        validate_certs: false
        state: present
        definition:
          kind: Deployment
          apiVersion: apps/v1
          metadata:
            name: frontend
            namespace: my-app-project
            labels:
              app: frontend
              app.kubernetes.io/component: frontend
              app.kubernetes.io/instance: frontend
              app.kubernetes.io/name: frontend
              app.kubernetes.io/part-of: my-app
              app.openshift.io/runtime-namespace: my-app-project
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: frontend
            template:
              metadata:
                labels:
                  app: frontend
                  deployment: backend
              spec:
                serviceAccountName: my-sa
                containers:
                  - name: frontend
                    image: >-
                      quay.io/markus_roth/automation/frontend:1.0
                    ports:
                      - containerPort: 3000
                env:
                  - name: REACT_APP_API_BASE_URL
                    value: "http://backend-service:5000"

    - name: Expose the frontend application with a service
      kubernetes.core.k8s:
        validate_certs: false
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: frontend
            namespace: my-app-project
          spec:
            selector:
              app: frontend
            ports:
              - protocol: TCP
                port: 3000
                targetPort: 3000
  
    
    - name: Expose the frontend application via a route
      kubernetes.core.k8s:
        validate_certs: false
        state: present
        definition:
          apiVersion: route.openshift.io/v1
          kind: Route
          metadata:
            name: my-frontend
            namespace: my-app-project
          spec:
            host: my-frontend.apps-crc.testing
            to:
              kind: Service
              name: frontend
            port:
              targetPort: 3000

    - name: Verify the route and display URL
      kubernetes.core.k8s_info:
        validate_certs: false
        api_version: route.openshift.io/v1
        kind: Route
        name: my-frontend
        namespace: my-app-project
      register: route_info

    - name: Show application route
      ansible.builtin.debug:
        msg: "Application deployed at: http://{{ route_info.resources[0].spec.host }}"

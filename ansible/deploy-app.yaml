---
- name: Logging in to Openshift
  hosts: localhost
  vars_files:
    - vars/vars.yml
    - next/user.yml
  
  tasks:
    - name: Ensure an access token is retrieved for the admin user
      community.okd.openshift_auth:
        host: '{{ ocp4_api_url }}'
        username: "{{ ocp4_kubeadmin }}"
        password: "{{ ocp4_kubeadmin_pw }}"
        validate_certs: false
      register: auth_results

- name: Deploy Application in OpenShift using Ansible K8s modules
  hosts: localhost
  gather_facts: false
  connection: local
  vars_files:
    - vars/vars.yml
    - vault/vault.yml
  
  module_defaults:
    group/community.okd.okd:
      namespace: openshift-config
      api_key: "{{ auth_results['openshift_auth']['api_key'] }}"
      host: '{{ ocp4_api_url }}'
    group/kubernetes.core.k8s:
      namespace: openshift-config
      api_key: "{{ auth_results['openshift_auth']['api_key'] }}"
      host: '{{ ocp4_api_url }}'

  tasks:

    - name: Create OpenShift project (namespace)
      kubernetes.core.k8s:
        validate_certs: false
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: my-app-project

#    - name: Define the S2I BuildConfig
#      kubernetes.core.k8s:
#        validate_certs: false
#        state: present
#        definition:
#          apiVersion: build.openshift.io/v1
#          kind: BuildConfig
#          metadata:
#            name: my-app-backend
#            namespace: my-app-project
#          spec:
#            source:
#              type: Git
#              git:
#                uri: "https://github.com/markusroth1/argocd-pipline-demo.git"
#              contextDir: /app/backend
#           strategy:
#              type: Source
#              sourceStrategy:
#                from:
#                  kind: ImageStreamTag
#                  name: "backend:1.0"
#                  namespace: openshift
#            output:
#              to:
#                kind: ImageStreamTag
#                name: "my-app-backend:1.0"
#            triggers:
#              - type: ConfigChange
#              - type: GitHub
#                github:
#                  secret: <webhook-secret>

#    - name: Define the ImageStream for the application
#      kubernetes.core.k8s:
#        validate_certs: false
#        state: present
#        definition:
#          apiVersion: image.openshift.io/v1
#          kind: ImageStream
#          metadata:
#            name: my-app-backend
#            namespace: my-app-project

    - name: Deploy application using Deployment
      kubernetes.core.k8s:
        validate_certs: false
        state: present
        definition:
          apiVersion: apps.openshift.io/v1
          kind: Deployment
          metadata:
            name: my-app-backend
            namespace: my-app-project
          spec:
            replicas: 1
            selector:
              app: my-app-backend
            template:
              metadata:
                labels:
                  app: my-app-backend
              spec:
                containers:
                  - name: my-app-backend
                    image: "my-app-backend:1.0"
                    imagePullPolicy: Always
                    ports:
                      - containerPort: 8080
            triggers:
              - type: ImageChange
                imageChangeParams:
                  automatic: true
                  containerNames:
                    - my-app-backend
                  from:
                    kind: ImageStreamTag
                    name: "to-do-backend:latest"
              - type: ConfigChange

    - name: Expose the application via a route
      kubernetes.core.k8s:
        validate_certs: false
        state: present
        definition:
          apiVersion: route.openshift.io/v1
          kind: Route
          metadata:
            name: my-app
            namespace: my-app-project
          spec:
            to:
              kind: Service
              name: my-app-backend
            port:
              targetPort: 8080

    - name: Verify the route and display URL
      kubernetes.core.k8s_info:
        validate_certs: false
        api_version: route.openshift.io/v1
        kind: Route
        name: my-app-backend
        namespace: my-app-project
      register: route_info

    - name: Show application route
      ansible.builtin.debug:
        msg: "Application deployed at: http://{{ route_info.resources[0].spec.host }}"
